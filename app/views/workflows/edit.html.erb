<div class="row networkViewRow">

  <div class="col-md-3">
    <div class="box box-primary">
      <div class="box-header with-border">
        <h3 class="box-title">Details</h3>
      </div>
      <div class="box-body">
        <form role="form">
	  <div class="form-group">
	    <label>Id</label>
	    <input id="id" type="text" class="form-control" placeholder="Id">
	  </div>
	</form>
      </div>
      <div class="box-footer">
      </div>
    </div>
  </div>

  <div class="col-md-9">
    <div class="box box-primary">
      <div class="box-header with-border">
        <h3 class="box-title">Flow</h3>
      </div>
      <div class="box-body">
        <div id="mynetwork" style="height:400px"></div>
      </div>
      <div class="box-footer">
      </div>
    </div>
  </div>

</div>

<div class="row stepEditorRow">

  <div class="col-md-4">
    <div class="box box-info">
      <div class="box-body pad">
        <div class="form-group">
          <label for="ParentSteps">Parents</label>
          <select id="ParentSteps" name="ParentSteps" class="form-control select2" multiple="multiple">
	  </select>
	</div>
      </div>
    </div>
  </div>

  <div class="col-md-4">
    <div class="box box-info">
      <div class="box-body pad">
        <button id="openWorkflowView" type="button" class="btn btn-block btn-secondary">Cancel</button>
        <button id="saveStep" type="button" class="btn btn-block btn-primary">Save</button>
      </div>
    </div>
  </div>

</div>

<div class="row stepEditorRow">

  <div class="col-md-4">

    <div class="box box-info">
      <div class="box-header">
        <h3 class="box-title">Incoming Event</h3>
      </div>
      <div class="box-body pad">
        <div id="incoming_data_editor"></div>
      </div>
    </div>

  </div>

  <div class="col-md-4">

    <div class="box box-info">
      <div class="box-header">
        <h3 class="box-title">Action</h3>
      </div>
      <div class="box-body pad">
        <button id="runStep" type="button" class="btn btn-block btn-primary">Run</button>
      </div>
    </div>

    <div class="box box-info">
      <div class="box-header">
        <h3 class="box-title">Step</h3>
      </div>
      <div class="box-body pad">
        <div id="step_editor"></div>
      </div>
    </div>

  </div>

  <div id="outgoingEvents" class="col-md-4">

    <div id="outgoingEventTemplate" class="box box-info" style="display:none">
      <div class="box-header">
        <h3 class="box-title">Outgoing Event</h3>
        <div class="box-tools pull-right">
          <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
          </button>
        </div>
      </div>
      <div class="box-body pad">
        <div data-future="editor"></div>
      </div>
    </div>

  </div>

</div>

<script type="text/javascript">

var func = function() {

  var openWorkflowView = function() {
    $('.stepEditorRow').hide();
    $('.networkViewRow').show();
  }

  var stepRunner = StepEditor({
    runStepUrl: '/starter/run_step',
    incomingEventEditorId: 'incoming_data_editor',
    stepEditorId: 'step_editor',
    runStepButton: function() { return $('#runStep') },
    outgoingEvents: function() { return $('#outgoingEvents') },
    outgoingEventTemplate: function() { return $('#outgoingEventTemplate') }
  });


  $.getJSON('/workflows/json/<%= @workflow.id %>', function(data) {

    var workflow = data.workflow;

    $('#id').val(workflow.id);

    for(var i = 0; i < workflow.steps.length; i++){
      workflow.steps[i].label = workflow.steps[i].name || workflow.steps[i].id;
    }

    var nodes = new vis.DataSet(workflow.steps);

    var edges = [];
    for(var i = 0; i < workflow.steps.length; i++)
      if (workflow.steps[i].parent_step_ids)
        for(var j = 0; j < workflow.steps[i].parent_step_ids.length; j++)
	  edges.push( { from: workflow.steps[i].id, to: workflow.steps[i].parent_step_ids[j] } );

    edges = new vis.DataSet(edges);

    var container = document.getElementById('mynetwork');
    var data = {
      nodes: nodes,
      edges: edges
    };
    var options = {};
    var network = new vis.Network(container, data, options);

    var findStep = function(stepId) {
      for(var i = 0; i < workflow.steps.length; i++)
        if (workflow.steps[i].id == stepId)
          return workflow.steps[i];
      return undefined;
    };

    var editStep = function(step) {
      step = JSON.parse(JSON.stringify(step));
      delete step.method;
      delete step.label;
      stepRunner.loadStep(step, {});
      $('.stepEditorRow').show();
      $('.networkViewRow').hide();

      $('#ParentSteps').val(step.parent_step_ids).trigger('change');
    };

    var saveStep = function(newStep, oldStep) {
      for(var property in newStep)
        oldStep[property] = newStep[property];
      oldStep.label = newStep.name || newStep.id;

      nodes.update(oldStep);

      openWorkflowView();
    };

    network.on('doubleClick', function(params) {
      var step_id = params.nodes[0];
      var step = findStep(step_id)
      editStep(step);
    });

    $('#saveStep').click(function() {
      var newStep = stepRunner.getStep();
      var oldStep = findStep(newStep.id);
      saveStep(newStep, oldStep);
    });

    var loadAllParentSteps = function(workflow, selector) {
      var parentSteps = workflow.steps
                                .map(function(x){ return { id: x.id, name: x.name } })
                                .map(function(x){ return $('<option>').val(x.id).html(x.name) });
      for(var i = 0; i < parentSteps.length; i++)
        selector.append(parentSteps[i]).trigger('change');

      return undefined;
    }(workflow, $('#ParentSteps'));

  });

  $('#openWorkflowView').click(openWorkflowView);
};

jQuery(func);

</script>
