<script src="https://cdn.jsdelivr.net/npm/vue@2.5.21/dist/vue.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.js"></script>
<link type="text/css" src="https://cdnjs.cloudflare.com/ajax/libs/vis/4.21.0/vis.min.css" />
<link type="text/css" src="/assets/jsoneditor.min.css" />
<script type="text/javascript" src="/assets/event-stream.js"></script>
<script type="text/javascript" src="/assets/event-visualization.js"></script>
<script type="text/javascript" src="/assets/event-creation-app.js"></script>
<script type="text/javascript" src="/assets/jsoneditor.min.js"></script>

<script>
    // create the editor
    function startJsonEditor(onChange) {
      var container = document.getElementById("jsoneditor");
      var options = {
        onChange: () => onChange()
      };
      var editor = new JSONEditor(container, options);

      // set json
      var json = {};
      editor.set(json);

      // get json
      var json = editor.get();

      return editor;
    }
</script>
<div id="new-sequence">
  <h3>New Workflow</h3>
  <hr />
  <h3>Selected node: <span>{{ network.selected.step }}</span></h3>
  <div>
    <label>Name</label>
    <input v-model="network.selected.step.name" />
  </div>
  <div>
    <label>Type</label>
    <input v-model="network.selected.step.type" />
  </div>
  <div>
    <label>Step Guid</label>
    <input v-model="network.selected.step.guid" />
  </div>
  <div>
    <label>Step Config</label>
    <div id="jsoneditor" style="width: 400px; height: 400px;"></div>
  </div>
  <button @click="refreshStep(network.selected)" type="button">step: save</button>
  <hr />
  <h3>Link up:</span></h3>
  <div>
    <label><button type="button" @click="expectFrom()">From</button></label>
    <span v-if="network.selectedFrom">{{ network.selectedFrom.label }}</span>
  </div>
  <div>
    <label><button type="button" @click="expectTo()">To</button></label>
    <span v-if="network.selectedTo">{{ network.selectedTo.label }}</span>
  </div>
  <button @click="addEdge(network.selectedFrom, network.selectedTo)" type="button">step: link</button>
  <button @click="removeEdge(network.selectedFrom, network.selectedTo)" type="button">step: un-link</button>
  <hr />
  <div>
    <h3>And Fire:</h3>
    <label>Message</label>
    <input v-model="message" />
  </div>
  <div>
    <button @click="fireWorkflow(message)" type="button">workflow: fire</button>
  </div>
  <div>
    <button @click="addBlankStep()" type="button">step: add</button>
  </div>
</div>

<div id='mynetwork' style="height:300px; width: 800px; border: 1px solid black;"></div>
<script type="text/javascript">
  const diagram = createBlankNetworkDiagram('mynetwork');
  const app = buildEventCreationApp('#new-sequence', diagram);
  setupDefaultInputs(diagram);
  function setupDefaultInputs() {
    const pearStep = { name: 'Pear',   type: 'EventHandler', guid: 'pear' }
    const bananaStep = { name: 'Banana', type: 'EventHandler', guid: 'banana', next_steps: [pearStep] };
    const orangeStep = { name: 'Orange', type: 'EventHandler', guid: 'orange', next_steps: [bananaStep] };
    const appleStep = { name: 'Apple',  type: 'EventHandler', guid: 'apple', next_steps: [orangeStep] };
    var steps = { first_step: appleStep };
    addStepAsNode(diagram, steps.first_step);
  }
</script>
