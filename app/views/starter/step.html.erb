<div class="row">

  <div class="col-md-4">

    <div class="box box-info">
      <div class="box-header">
        <h3 class="box-title">Incoming Event</h3>
      </div>
      <div class="box-body pad">
        <div id="incoming_data_editor"></div>
      </div>
    </div>

  </div>

  <div class="col-md-4">

    <div class="box box-info">
      <div class="box-header">
        <h3 class="box-title">Action</h3>
      </div>
      <div class="box-body pad">
        <button id="runStep" type="button" class="btn btn-block btn-primary">Run</button>
      </div>
    </div>

    <div class="box box-info">
      <div class="box-header">
        <h3 class="box-title">Step</h3>
      </div>
      <div class="box-body pad">
        <div id="step_editor"></div>
      </div>
    </div>

  </div>

  <div id="outgoingEvents" class="col-md-4">

    <div id="outgoingEventTemplate" class="box box-info" style="display:none">
      <div class="box-header">
        <h3 class="box-title">Outgoing Event</h3>
        <div class="box-tools pull-right">
          <button type="button" class="btn btn-box-tool" data-widget="collapse"><i class="fa fa-minus"></i>
          </button>
        </div>
      </div>
      <div class="box-body pad">
        <div data-future="editor"></div>
      </div>
    </div>

  </div>

</div>

<script type="text/javascript">

var func = function() {

  var step = {
    'type': 'EventFormatter',
    'config': {
      'merge_mode': 'merge',
      'message': 'Hello {{first_name}}',
      'instructions': {
        'full_name': '{{first_name}} {{last_name}}'
      }
    }
  };

  var incoming = {
    first_name: 'Darren',
    last_name: 'Cauthon'
  };

  var stepEditor = JsonEditor.create( { id: 'step_editor', data: step } );
  var incomingEventDataEditor = JsonEditor.create( { id: 'incoming_data_editor', data: incoming } );
  //var outgoingEventDataEditor = JsonEditor.create( { id: 'outgoing_data_editor', data: {a:'b'}, mode: 'view' } );

  stepEditor.expandAll();
  incomingEventDataEditor.expandAll();
  //outgoingEventDataEditor.collapseAll();

  var outgoingEventEditors = [];

  $('#runStep').click(function() {

    $('#outgoingEvents').children('div[data-remove=me]').remove();

    for(var i = 0; i < outgoingEventEditors.length; i++) {
      var outgoingEventEditor = outgoingEventEditors[i];
      outgoingEventEditor.destroy();
    }
    outgoingEventEditors = [];

    var request = {
      step: JSON.stringify(stepEditor.get()),
      incoming_event: JSON.stringify(incomingEventDataEditor.get())
    };

    $.post('/starter/run_step', request).then(function(data){

      for(var i = 0; i < data.events.length; i++){
	var event = data.events[i];

	var eventId = 'event-' + event.id;

        var eventBox = $('#outgoingEventTemplate').clone()
          .attr('data-remove', 'me')
	  .attr('id', eventId)
	  .show();

	eventBox.appendTo('#outgoingEvents');

        $('#' + eventId).find('.box-title').html(event.message);

        var editorId = eventId + '-editor';
	$('#' + eventId).find('div[data-future=editor]').attr('id',editorId);
	outgoingEventEditors.push(JsonEditor.create( { id: editorId, data: event.data, mode: 'view' } ));
      }

    });


  });

};

document.addEventListener('DOMContentLoaded', func);

</script>
